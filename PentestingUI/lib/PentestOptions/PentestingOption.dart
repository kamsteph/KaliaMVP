import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:lucide_icons/lucide_icons.dart';
import 'package:pentest/KaliaPentesting/NetworkPentest.dart';
import 'package:pentest/PentestOptions/NetworkPentestAreas.dart';
import 'package:pentest/PentestOptions/WebPentestingAreas.dart';

import '../CustomColorBackground/ColorBackground.dart';
import '../DTO/AttackSurface.dart';


class VulnerabilityScannerApp extends StatelessWidget {
  const VulnerabilityScannerApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Vulnerability Scanner',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        textTheme: GoogleFonts.poppinsTextTheme(),
      ),
      home: const ScannerSelectionPage(),
    );
  }
}

class ScannerSelectionPage extends StatefulWidget {
  const ScannerSelectionPage({super.key});

  @override
  State<ScannerSelectionPage> createState() => _ScannerSelectionPageState();
}

class _ScannerSelectionPageState extends State<ScannerSelectionPage> {
  bool isNetworkSelected = false;
  bool isWebSelected = false;

  void toggleScanner(String type) {
    setState(() {
      if (type == 'network') {
        isNetworkSelected = !isNetworkSelected;
      } else if (type == 'web') {
        isWebSelected = !isWebSelected;
      }
    });
  }

  void proceedToNext() {
    // if (isNetworkSelected && isWebSelected) {
    //   Navigator.push(
    //     context,
    //     MaterialPageRoute(builder: (context) => const CombinedScanPage()),
    //   );
    //}
    if (isNetworkSelected) {
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => const NetworkScanPage(attackSurface: AttackSurface.full(),)),
      );
    } else if (isWebSelected) {
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => const WebPentestAreasPage()),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppTheme.distinctGitHubBackground,
      appBar: AppBar(
        centerTitle: true,
        backgroundColor: AppTheme.distinctGitHubBackground,
        title: Text(
          'Scanning Selection',
          style: GoogleFonts.playfairDisplay(fontSize: 24, fontWeight: FontWeight.bold),
        ),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Center(
              child: Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  ClipRRect(
                    borderRadius: BorderRadius.circular(16),
                    child: SizedBox(
                      width: 60,
                      height: 60,
                      child: Image.asset(
                        "assets/3d-shape-glowing-with-bright-holographic-colors.jpg",
                        fit: BoxFit.cover,
                      ),
                    ),
                  ),
                  const SizedBox(width: 10),
                  Text("Kalia", style: GoogleFonts.oswald(fontSize: 30)),
                ],
              ),
            ),

            const SizedBox(height: 30),

            Text(
              'Choose the Pentesting option you desire:',
              textAlign: TextAlign.center,
              style: GoogleFonts.poppins(
                fontSize: 20,
                fontWeight: FontWeight.w600,
              ),
            ),

            const SizedBox(height: 40),

            GestureDetector(
              onTap: () => toggleScanner('network'),
              child: Container(
                height: 120,
                decoration: BoxDecoration(
                  color: isNetworkSelected ? Colors.blue[100] : Colors.grey[200],
                  borderRadius: BorderRadius.circular(16),
                  border: Border.all(
                    color: isNetworkSelected ? Colors.blue : Colors.black,
                    width: 2,
                  ),
                ),
                child: Center(
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      const Icon(LucideIcons.wifi, size: 28),
                      const SizedBox(width: 10),
                      Text('Network', style: GoogleFonts.poppins(fontSize: 22)),
                    ],
                  ),
                ),
              ),
            ),

            const SizedBox(height: 20),

            GestureDetector(
              onTap: () => toggleScanner('web'),
              child: Container(
                height: 110,
                decoration: BoxDecoration(
                  color: isWebSelected ? Colors.blue[100] : Colors.grey[200],
                  borderRadius: BorderRadius.circular(20),
                  border: Border.all(
                    color: isWebSelected ? Colors.blue : Colors.black,
                    width: 2,
                  ),
                ),
                child: Center(
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      const Icon(Icons.web, size: 28),
                      const SizedBox(width: 10),
                      Text('Web', style: GoogleFonts.poppins(fontSize: 22)),
                    ],
                  ),
                ),
              ),
            ),

            const SizedBox(height: 30),

            if (isWebSelected || isNetworkSelected)
              Align(
                alignment: Alignment.centerRight,
                child: ElevatedButton.icon(
                  onPressed: proceedToNext,
                  icon: const Icon(Icons.arrow_forward),
                  label: Text('Next', style: GoogleFonts.poppins()),
                  style: ElevatedButton.styleFrom(
                    minimumSize: const Size(60, 60),
                    padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),
                  ),
                ),
              )
          ],
        ),
      ),
    );
  }
}
